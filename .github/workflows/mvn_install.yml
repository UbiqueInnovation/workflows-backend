name: Runs Maven Install
on:
    workflow_call:
        inputs:
            ref_name:
                required: true
                type: string
                description: tag or branch name to checkout
            checkout_lfs:
                required: false
                default: false
                type: boolean
                description: Checkout with lfs, default false
            checkout_submodules:
                required: false
                default: false
                type: string
                description: "Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules."
            parent_pom:
                required: true
                type: string
            java_version:
                default: '21'
                type: string
                required: false
            use_mvn_central:
                default: false
                type: boolean
                required: false
                description: If false, use artifactory_* input secrets
            install_apt_packages:
                required: false
                type: string
                default: ''
                description: space-separated list of apt packages to install before build
            skip_tests:
                default: false
                type: boolean
                required: false
                description: Set to true to enable '-DskipTests' temporarily during debugging. DO NOT SET PERMANENTLY
            self_hosted_cache_endpoint:
                required: false
                default: 'truenas.local.lan'
                type: string
                description: only applicable if runs_on self_hosted
            self_hosted_cache_port:
                required: false
                default: 9001
                type: number
                description: only applicable if runs_on self_hosted
            self_hosted_cache_bucket:
                required: false
                default: github-actions-cache
                type: string
                description: only applicable if runs_on self_hosted
            self_hosted_cache_region:
                default: local
                required: false
                type: string
                description: only applicable if runs_on self_hosted
            write_cache:
                default: false
                type: boolean
                required: false
                description: Whether the build should update the build cache. This build will not use the existing cache to get a clean base for subsequent builds.
    
        secrets:
            artifactory_user:
                required: false
            artifactory_password:
                required: false
            artifactory_url:
                required: false
            artifactory_repo:
                required: false
            self_hosted_cache_access_key:
                required: false
                description: required if runs_on self_hosted
            self_hosted_cache_secret_key:
                required: false
                description: required if runs_on self_hosted
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
                with:
                    ref: ${{ inputs.ref_name }}
                    lfs: ${{ inputs.checkout_lfs }}
                    submodules: ${{ inputs.checkout_submodules }}

            -   name: Set up JDK
                uses: actions/setup-java@v4
                with:
                    java-version: ${{ inputs.java_version }}
                    distribution: 'temurin'
            -   name: Restore Maven packages from self-hosted MinIO
                if: ${{ fromJson(inputs.runs_on)[0] == 'self-hosted' && inputs.write_cache == false }}
                uses: tespkg/restore@cba095d7af782a955b8f4fa13396fbf0ab62bd4b
                with:
                    endpoint: ${{ inputs.self_hosted_cache_endpoint }}
                    port: ${{ inputs.self_hosted_cache_port }}
                    insecure: true
                    accessKey: ${{ secrets.self_hosted_cache_access_key }}
                    secretKey: ${{ secrets.self_hosted_cache_secret_key }}
                    bucket: ${{ inputs.self_hosted_cache_bucket }}
                    region: ${{ inputs.self_hosted_cache_region }}
                    use-fallback: false
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-${{ inputs.app_name }}-m2

            -   name: Cache Maven packages
                if: ${{ fromJson(inputs.runs_on)[0] != 'self-hosted' }}
                uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2-

            -   name: install apt packages '${{ inputs.install_apt_packages }}'
                if: ${{ inputs.install_apt_packages }}
                run: |
                    sudo apt update && sudo apt install ${{ inputs.install_apt_packages }}

            -   name: Create maven central settings.xml
                if: ${{ inputs.use_mvn_central }}
                uses: whelk-io/maven-settings-xml-action@9dc09b23833fa9aa7f27b63db287951856f3433d

            -   name: Create custom artifactory settings.xml
                if: ${{ ! inputs.use_mvn_central }}
                uses: whelk-io/maven-settings-xml-action@9dc09b23833fa9aa7f27b63db287951856f3433d
                with:
                    servers: '[{"id": "ubique-artifactory", "username": "${{ secrets.artifactory_user}}", "password": "${{ secrets.artifactory_password }}"}]'
                    repositories: '[{"id" : "ubique-artifactory", "url" : "${{ secrets.artifactory_url }}${{ secrets.artifactory_repo }}"}]'

            -   name: Build with Maven
                run: mvn --batch-mode --update-snapshots install -DskipTests=${{ inputs.skip_tests }} -f ${{ inputs.parent_pom }}
            
            -   name: Update Maven package cache on self-hosted MinIO
                if: ${{ fromJson(inputs.runs_on)[0] == 'self-hosted' && inputs.write_cache == true }}
                uses: tespkg/save@cba095d7af782a955b8f4fa13396fbf0ab62bd4b
                with:
                    endpoint: ${{ inputs.self_hosted_cache_endpoint }}
                    port: ${{ inputs.self_hosted_cache_port }}
                    insecure: true
                    accessKey: ${{ secrets.self_hosted_cache_access_key }}
                    secretKey: ${{ secrets.self_hosted_cache_secret_key }}
                    bucket: ${{ inputs.self_hosted_cache_bucket }}
                    region: ${{ inputs.self_hosted_cache_region }}
                    use-fallback: false
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-${{ inputs.app_name }}-m2
