name: Build and Push Docker Images on release/
on:
    workflow_call:

        inputs:
            ref_name:
                required: true
                type: string
                description: tag or branch name
            node_version:
                default: '16'
                type: string
                required: false
            cache_dependency_path:
                default: 'yarn.lock'
                type: string
                required: false
            release_env:
                required: true
                type: string
                description: 'ENV to build. dev|prod. runs "yarn run build${build_cmd_postfix}:${release_env}"'
            build_cmd_postfix:
                required: false
                default: ""
                type: string
                description: 'Runs "yarn run build${build_cmd_postfix}:${release_env}"'
            image_name_postfix:
                required: false
                default: ""
                type: string
                description: 'Creates image name in the form ${app_name}${image_name_postfix}-${release_env}'
            tag_add_commithash:
                required: false
                default: false
                type: boolean
                description: Add the current commit hash to the branch (necessary when deploying from a branch)
            app_name:
                required: true
                type: string
                description: name to tag the image with
            app_directory:
                required: true
                type: string
                description: directory that contains the package.json
            run_poeditor:
                required: false
                default: false
                type: boolean

        secrets:
            acr_registry:
                required: true
            acr_username:
                required: true
            acr_password:
                required: true
            poeditor_api_key:
                required: false
                description: necessary if input.run_poeditor is true
            poeditor_project_id:
                required: false
                description: necessary if input.run_poeditor is true

jobs:
    build:
        name: Build Project
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2

            -   uses: actions/setup-node@v2
                with:
                    node-version: '${{ inputs.node_version }}'
                    check-latest: true
                    cache: 'yarn'
                    cache-dependency-path: '${{ inputs.app_directory }}/${{ inputs.cache_dependency_path }}'

            -   uses: actions/setup-python@v2
                if: ${{ inputs.run_poeditor }}
                with:
                    python-version: '3.x'
                    cache: 'pip'

            -   name: Check requirements.txt existence
                if: ${{ inputs.run_poeditor }}
                id: check_requirements_txt
                uses: andstor/file-existence-action@87d74d4732ddb824259d80c8a508c0124bf1c673
                with:
                    files: "requirements.txt"

            -   name: Install required python module using pip
                if: ${{ steps.check_requirements_txt.outputs.files_exists == 'true' }}
                run: |
                    python -m pip install -r requirements.txt

            -   name: Run getTranslations.py
                if: ${{ inputs.run_poeditor }}
                run: |
                    python ${{ inputs.app_directory }}/getTranslations.py ${{ secrets.poeditor_api_key }} ${{ secrets.poeditor_project_id }}

            -   name: Build using yarn
                run: |
                    yarn --cwd ${{ inputs.app_directory }}
                    yarn --cwd ${{ inputs.app_directory }} run build${{ inputs.build_cmd_postfix }}:${{ inputs.release_env }}
                    tar -czvf docker/${{ inputs.app_name }}/bin/${{ inputs.app_name }}.tar.gz -C ${{ inputs.app_directory }}/build .

            -   name: Set TAG_NAME with commit hash
                if: ${{ inputs.tag_add_commithash }}
                run: echo "TAG_NAME=${{ inputs.ref_name }}-${GITHUB_SHA::8}" >> $GITHUB_ENV

            -   name: Set TAG_NAME
                if: ${{ ! inputs.tag_add_commithash }}
                run: echo "TAG_NAME=${{ inputs.ref_name }}" >> $GITHUB_ENV

            -   uses: azure/docker-login@v1
                with:
                    login-server: ${{ secrets.acr_registry }}
                    username: ${{ secrets.acr_username }}
                    password: ${{ secrets.acr_password }}

            -   run: |
                    docker build -t ${{ secrets.acr_registry }}/${{ inputs.app_name }}-${{ inputs.image_name_postfix }}-${{ inputs.release_env }}:${{ env.TAG_NAME }} docker/${{ inputs.app_name }}
                    docker image push ${{ secrets.acr_registry }}/${{ inputs.app_name }}-${{ inputs.release_env }}:${{ env.TAG_NAME }}
