name: Build and Push Docker Images on release/
on:
    workflow_call:

        inputs:
            ref_name:
                required: true
                type: string
                description: tag or branch name
            release_env:
                required: true
                type: string
                description: 'ENV to build. dev|prod. runs "pnpm build${build_cmd_postfix}:${release_env}"'
            image_name_postfix:
                required: false
                default: ""
                type: string
                description: "Creates image name in the form ${app_name}${image_name_postfix}-${release_env}"
            tag_add_commithash:
                required: false
                default: false
                type: boolean
                description: Add the current commit hash to the branch (necessary when deploying from a branch)
            app_name:
                required: true
                type: string
                description: name to tag the image with
            app_directory:
                required: true
                type: string
                description: directory that contains the package.json
            dirs_for_docker_build:
                required: true
                type: string
                description: Space-separated list of files or glob pattern to include in docker build context. E.g. 'public .next' for .next builds or 'build' for other web builds.

        secrets:
            acr_registry:
                required: true
            acr_username:
                required: true
            acr_password:
                required: true

jobs:
    build:
        name: Build Project
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   name: Tar Build dir to docker
                run: |
                    tar -czvf docker/${{ inputs.app_name }}/bin/${{ inputs.app_name }}.tar.gz -C ${{ inputs.app_directory }} ${{ inputs.dirs_for_docker_build }}

            -   name: Set TAG_NAME with commit hash
                if: ${{ inputs.tag_add_commithash }}
                run: echo "TAG_NAME=${{ inputs.ref_name }}-${GITHUB_SHA::8}" >> $GITHUB_ENV

            -   name: Set TAG_NAME
                if: ${{ ! inputs.tag_add_commithash }}
                run: echo "TAG_NAME=${{ inputs.ref_name }}" >> $GITHUB_ENV

            -   name: Set IMAGE_NAME
                run: echo "IMAGE_NAME=${{ inputs.app_name }}${{ inputs.image_name_postfix }}-${{ inputs.release_env }}" >> $GITHUB_ENV

            -   uses: azure/docker-login@v1
                with:
                    login-server: ${{ secrets.acr_registry }}
                    username: ${{ secrets.acr_username }}
                    password: ${{ secrets.acr_password }}

            -   run: |
                    docker build -t ${{ secrets.acr_registry }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }} docker/${{ inputs.app_name }}
                    docker image push ${{ secrets.acr_registry }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
