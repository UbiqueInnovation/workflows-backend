name: Runs Pnpm Install
on:
    workflow_call:
        inputs:
            ref_name:
                required: true
                type: string
                description: tag or branch name
            checkout_lfs:
                required: false
                default: false
                type: boolean
            checkout_submodules:
                required: false
                default: false
                type: string
                description: "Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules."
            node_version:
                default: "20"
                type: string
                required: false
            pnpm_version:
                default: "8"
                type: string
                required: false
            cache_node:
                default: "pnpm"
                type: string
                required: false
            cache_dependency_path:
                default: "pnpm-lock.yaml"
                type: string
                required: false
                description: path to e.g. pnpm-lock.yaml from ${app_directory}/
            app_directory:
                required: true
                type: string
                description: directory that contains the package.json
            release_env:
                required: false
                type: string
                description: if set the given env build is also executed
            build_dir:
                required: false
                default: build
                type: string
            run_poeditor:
                required: false
                default: false
                type: boolean
            poeditor_get_translations_filename:
                required: false
                default: getTranslations.py
                type: string
                description: name of the getTranslations script. Defaults to getTranslations.py.
            use_custom_registry:
                type: boolean
                default: false
                description: Use custom npm registry, uses default 'https://registry.npmjs.org' if not set. Set secrets npm_registry_url and npm_registry_authtoken accordingly.
            artifact_dir:
                required: false
                default: ""
                description: glob pattern for all artifact dirs
                type: string
            artifact_name:
                required: false
                default: "artifact"
                description: What to call artifact to store (only needed if artifact_dir) is set. Defaults to "artifact".
                type: string
            artifact_retention_days:
                required: false
                default: 5
                description: retention period of uploaded artifacts
                type: number


        secrets:
            poeditor_api_key:
                required: false
                description: necessary if input.run_poeditor is true
            poeditor_project_id:
                required: false
                description: necessary if input.run_poeditor is true
            npm_registry_url:
                required: false
                description: necessary if input.use_custom_registry is true
            npm_registry_authtoken:
                required: false
                description: necessary if input.use_custom_registry is true
            sentry_auth_token:
                required: false

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
                with:
                    ref: ${{ inputs.ref_name }}
                    lfs: ${{ inputs.checkout_lfs }}
                    submodules: ${{ inputs.checkout_submodules }}

            -   uses: pnpm/action-setup@v4
                with:
                    version: ${{ inputs.pnpm_version }}

            -   uses: actions/setup-node@v4
                with:
                    node-version: "${{ inputs.node_version }}"
                    check-latest: true
                    cache: "${{ inputs.cache_node }}"
                    cache-dependency-path: "${{ inputs.app_directory }}/${{ inputs.cache_dependency_path }}"

            -   name: Set custom NPM registry
                if: ${{ inputs.use_custom_registry }}
                run: |
                    cd ${{ inputs.root_directory || inputs.app_directory }} &&
                    pnpm config --location=project set registry https://${{ secrets.npm_registry_url }} &&
                    pnpm config --location=project set '//${{ secrets.npm_registry_url }}:_authToken' "${{ secrets.npm_registry_authtoken }}"

            -   uses: actions/setup-python@v5
                if: ${{ inputs.run_poeditor }}
                with:
                    python-version: "3.13.7"
                    cache: "pip"

            -   name: Check requirements.txt existence
                if: ${{ inputs.run_poeditor }}
                id: check_requirements_txt
                uses: andstor/file-existence-action@31a502724c77ada11ba0b3442e34757182ccdbd3
                with:
                    files: "requirements.txt"

            -   name: Install required python module using pip
                if: ${{ steps.check_requirements_txt.outputs.files_exists == 'true' }}
                run: |
                    python -m pip install -r requirements.txt

            -   name: Run ${{ inputs.poeditor_get_translations_filename }}
                if: ${{ inputs.run_poeditor }}
                run: |
                    python ${{ inputs.app_directory }}/${{ inputs.poeditor_get_translations_filename }} ${{ secrets.poeditor_api_key }} ${{ secrets.poeditor_project_id }}

            -   name: Install dependencies
                run: |
                    cd ${{ inputs.app_directory }} && pnpm install

            -   name: Build for Environment
                if: ${{ inputs.release_env }}
                run: |
                    cd ${{ inputs.app_directory }} && pnpm build:${{ inputs.release_env }}
                env:
                    SENTRY_AUTH_TOKEN: ${{ secrets.sentry_auth_token }}

            -   name: Upload Build Artifact
                if: ${{ inputs.artifact_dir }}
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ inputs.artifact_name }}
                    path: ${{ inputs.artifact_dir }}
                    retention-days: ${{ inputs.artifact_retention_days }}
                    if-no-files-found: error
