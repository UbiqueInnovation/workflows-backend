name: Build and Push Docker Images on release/
on:
    workflow_call:
        inputs:
            ref_name:
                required: true
                type: string
                description: tag or branch name
            image_name:
                required: true
                type: string
                description: name of the image to build
            tag_name:
                required: true
                type: string
                description: name of the tag
            app_name:
                required: true
                type: string
                description: name to tag the image with
            app_directory:
                required: true
                type: string
                description: directory that contains the Dockerfile (format docker/<app_directory>/Dockerfile), so might include app_name
            dockerfile_name:
                required: false
                default: "Dockerfile"
                type: string
                description: Name of the Dockerfile, defaults to 'Dockerfile'

        secrets:
            acr_registry:
                required: true
            acr_username:
                required: true
            acr_password:
                required: true

jobs:
    build:
        name: Build Project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set IMAGE_NAME
              run: echo "IMAGE_NAME=${{ inputs.app_name }}" >> $GITHUB_ENV

            - uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.acr_registry }}
                  username: ${{ secrets.acr_username }}
                  password: ${{ secrets.acr_password }}

            - name: Docker build and push
              uses: docker/build-push-action@v4
              with:
                  tags: ${{ secrets.acr_registry }}/${{ inputs.image_name }}:${{ inputs.tag_name }}
                  file: docker/${{ inputs.app_directory }}/${{ inputs.dockerfile_name }}
                  push: true
                  context: docker/${{ inputs.app_directory }}
